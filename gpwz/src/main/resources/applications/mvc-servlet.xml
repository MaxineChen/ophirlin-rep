<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/context  
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/mvc  
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/task 
		http://www.springframework.org/schema/task/spring-task.xsd">
	
	<!-- ================================================================================================= -->
	<!-- 引入其他资源 -->
	<!-- ================================================================================================= -->
	<import resource="dbmp-context.xml" />
	<import resource="dbmp-datasource-context.xml" />
	
	<!-- ================================================================================================= -->
	<!-- 扫描服务资源 -->
	<!-- ================================================================================================= -->
	<context:component-scan base-package="com.dbmp" />
	<context:component-scan base-package="com.authority" />
		
	<!-- ================================================================================================= -->
	<!-- Spring容器注册 -->
	<!-- ================================================================================================= -->
	<context:annotation-config />
	
	<!-- ================================================================================================= -->
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<!-- ================================================================================================= -->
   	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" /> 	
   	
   	
    
    <!-- ================================================================================================= -->
	<!--对静态资源文件的访问 -->
	<!-- ================================================================================================= -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- ================================================================================================= -->
	<!-- 国际化 -->
	<!-- ================================================================================================= -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>i18n/messages</value>
			</list>
		</property>
		<property name="useCodeAsDefaultMessage" value="true" />
	</bean>
	
	<!-- ================================================================================================= -->
	<!-- 添加注解驱动 -->
	<!-- ================================================================================================= -->
	<mvc:annotation-driven />
        
    <!-- ================================================================================================= -->
	<!--  spring 文件上传配置	-->
	<!-- ================================================================================================= -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
	
	<!-- ================================================================================================= -->
	<!--  公共配置	-->
	<!-- ================================================================================================= -->
	<bean id="commonConfig" class="com.dbmp.common.bean.CommonConfig">
		<property name="webTitle" value="${common.web.title}"/>
		<property name="tempPath" value="${common.temppath}"/>
		<property name="frkPrefixPath" value="${common.frkPrefixPath}"/>
		<property name="menuTypeCode" value="${common.menuTypeCode}"/>
		
		<property name="imageMaxSize" value="${common.image.maxsize}"/>
		<property name="imageSuffix" value="${common.image.suffix}"/>
		<property name="imageUploadPath" value="${common.image.uploadpath}"/>
		<property name="imageBaseUrl" value="${common.image.baseurl}"/>
		
		<property name="dataMaxSize" value="${common.data.maxsize}"/>
		<property name="dataSuffix" value="${common.data.suffix}"/>
		<property name="dataUploadPath" value="${common.data.uploadpath}"/>
		<property name="dataBaseUrl" value="${common.data.baseurl}"/>
		
		<property name="pdf2swfToolPath" value="${common.pdf2swfToolPath}"/>
	</bean>
	    
    <!-- ================================================================================================= -->
    <!-- ControllerView bean定义了一系列在不同请求下返回的逻辑视图，在你的应用中必须配置 以下列参数： -->
    <!-- ================================================================================================= -->
	<bean id="controllerView" class="com.dbmp.web.controller.ControllerView">
		<property name="defaultExceptionError" value="dbmp/error/defaultExceptionError" />
		<property name="defaultNeedLogin" value="dbmp/error/defaultNeedLogin" />
		<property name="exceptionErrorsForAjax" value="dbmp/error/exceptionErrorsForAjax" />
		<property name="needLoginForAjax" value="dbmp/error/needLoginForAjax" />
		<property name="bizMessage" value="dbmp/error/bizMessage" />
		<property name="bizMessageForAjax" value="dbmp/error/bizMessageForAjax" />
	</bean>
		
	<!-- ================================================================================================= -->
	<!-- 当程序中有未捕获的Exception将会调用该bean的resolveException方法，该方法会根据不同的请求 返回不同的视图到客户端，这些视图的配置请见ControllerView 
		debug： 设为true时，将会打印异常的堆栈信息，请在生产环境设置为false specialExceptionViewResolvers： 
		配置针对特定异常进行处理的Resolver,下面配置了在发生UnauthorizedAccessException 异常时的处理类，该类根据请求类型的不同转向不同的视图提示客户端需要登录 -->
	<!-- ================================================================================================= -->
	<bean class="com.dbmp.core.exception.resolver.impl.ManagementHandlerExceptionResolvers">
		<property name="debug" value="true" />
		<property name="specialExceptionViewResolvers">
			<map>
				<entry key="com.dbmp.core.exception.impl.UnauthorizedAccessException"
					value-ref="unauthorizedAccessExceptionViewResolver" />
			</map>
		</property>
		<property name="defaultExceptionViewResolver">
			<bean class="com.dbmp.core.exception.resolver.impl.DefaultExceptionHandler"/>
		</property>
		<property name="controllerView">  
   			<ref local="controllerView"/>
  		</property>
	</bean>
	<bean id="unauthorizedAccessExceptionViewResolver" class="com.dbmp.core.exception.resolver.impl.UnauthorizedAccessExceptionViewResolver" />
</beans>